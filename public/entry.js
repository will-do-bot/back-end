!function(s){function n(n){for(var t,c,o=n[0],l=n[1],r=n[2],p=0,h=[];p<o.length;p++)c=o[p],a[c]&&h.push(a[c][0]),a[c]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(s[t]=l[t]);for(d&&d(n);h.length;)h.shift()();return i.push.apply(i,r||[]),e()}function e(){for(var s,n=0;n<i.length;n++){for(var e=i[n],t=!0,o=1;o<e.length;o++){var l=e[o];0!==a[l]&&(t=!1)}t&&(i.splice(n--,1),s=c(c.s=e[0]))}return s}var t={},a={1:0};var i=[];function c(n){if(t[n])return t[n].exports;var e=t[n]={i:n,l:!1,exports:{}};return s[n].call(e.exports,e,e.exports,c),e.l=!0,e.exports}c.m=s,c.c=t,c.d=function(s,n,e){c.o(s,n)||Object.defineProperty(s,n,{configurable:!1,enumerable:!0,get:e})},c.r=function(s){Object.defineProperty(s,"__esModule",{value:!0})},c.n=function(s){var n=s&&s.__esModule?function(){return s.default}:function(){return s};return c.d(n,"a",n),n},c.o=function(s,n){return Object.prototype.hasOwnProperty.call(s,n)},c.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=n,o=o.slice();for(var r=0;r<o.length;r++)n(o[r]);var d=l;i.push([22,0]),e()}([,,,function(s,n){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n  <div class="top-content">\n      <p class="title">{{project.name}}</p>\n  </div>\n  <div class="bottom-content">\n      <div class="tasks-panel">\n          <p class="sub-title">Tasks</p>\n          <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\n          <div class="tasks">\n              <div ng-click=\'changeContent(task)\' ng-repeat="task in tasks" ng-class="getChosen(task)">#{{$index+1}} - {{task.name}}\n                <p class="float-right" ng-click="deleteTask(task._id)">X</p>\n              </div>\n              <a class=\'button\' href="#!/project">Back</a>\n        </div>\n      </div>\n      <div class="selected-task" ng-show="!showAddTask">\n          <div class="top-selected-task">\n              <p class="sub-title-task">{{chosenTask.name}}</p>\n              <p ng-class="getPriority()">Priority: {{chosenTask.priority}}</p>\n          </div>\n          <div class="task-attribute">\n              <p class="description">{{chosenTask.description}}</p>\n              <div class="task-button">\n                  <div class="task-buttom-left">\n                      <a class=\'button\' href="#!timetracker"> Time Tracker</a>\n                      <a ng-show="!chosenTask.finished" ng-click="startTask(chosenTask._id)" class=\'button\'> Start task</a>\n                      <a ng-show="!chosenTask.finished" ng-click="pauseTask(chosenTask._id)" class=\'button\'> Pause task</a>\n                  </div>\n                  <div class="task-buttom-right">\n                    <a class=\'button\' href="#!time">Deadline: {{ chosenTask.deadline }}</a>\n                    <a class=\'button\' href="#!chart"> Chart</a>  \n                    <a ng-show="!chosenTask.finished" ng-click="finishTask(chosenTask._id)" class=\'button\'> Finish task</a>\n                    <a ng-show="!chosenTask.finished" ng-click="showUpdateTask()" class=\'button\'> Update task</a>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\'selected-task\' ng-show="showAddTask">\n            <div class=\'addTask\'>\n                <p class="sub-title-task">{{subTitleTask}}</p>\n                <form>\n                    <div class="group">\n                        <input ng-model="task.name" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Name</label>\n                    </div>\n\n                    <div class="group">\n                        <input ng-model="task.description" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Description</label>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Start Date</span>\n                        <input ng-model="task.startDate" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Deadline</span>\n                        <input ng-model="task.deadline" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <input ng-model="task.priority" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Priority</label>\n                    </div>\n                </form>\n                <div style=\'float:right\'>\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\n                </div>\n            </div>\n\n\n        </div>\n  </div>\n\n</div>'},function(s,n){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <h1 class="title">Calendar</h1>\n    <center>\n        <div class="calendar-div">\n            <p class="search-date">Date: </p>\n            <p class="search-date">{{diaAtual}}</p>\n            \x3c!-- <input type="text" id="calendario" ng-value="diaAtual" placeholder="26/04/2018"/>--\x3e\n            \x3c!--<a class=\'button chart-button\' href="#!timetracker">Search</a>--\x3e\n        </div>\n\n        <div class="bottom-content">\n            <div class="tasks-panel">\n                <p class="sub-title">Tasks</p>\n                <div class="tasks">\n                    <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\n                </div>\n            </div>\n            <div class="selected-task">\n                <div class="top-selected-task">\n                    <p class="sub-title-task">{{chosenTask.name}}</p>\n                </div>\n                <div class="task-attribute">\n                    <p class="description">{{chosenTask.description}}</p>\n                    <div class="task-button">\n                        <div class="task-buttom-left">\n                            <a class=\'button\' href="#!chart"> Chart</a>\n                        </div>\n                        <div class="task-buttom-right">\n                            <a class=\'button\' href="#!time">Ends in 4d 3h</a>\n                        </div>\n\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    </center>\n\n</div>'},function(s,n){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <h1 class="title"> Chart</h1>\n    <center>\n        <div class="bottom-content">\n            <div class="tasks-panel">\n                <p class="sub-title">{{content.sideBar.type}}</p>\n                <div class="tasks">\n                    <p class="sub-title">Projects</p>\n                    <div ng-repeat="x in projects" ng-class="getChosen(x)">\n                        <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class="selected-task">\n                <div class="top-selected-task">\n                    <p class="sub-title-task">{{chosenProject.name}}</p>\n                </div>\n                <div class="task-attribute">\n                    <div class="task-button">\n                        <div class="chart-container" style="position: relative; height:30vh; width:60vw">\n                            <canvas id="chartTasks"></canvas>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </center>\n</div>'},function(s,n){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <div class="top-content">\n        <p class="title">Tasks</p>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n\n            <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\n            <div class="tasks">\n                <div ng-click=\'changeContent(x)\' class=\'side-button\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}\n                    <p class="blue" ng-click="showUpdateTask()">\n                        <i class="fas fa-pencil-alt"></i>\n                    </p>\n                    <p class="red" ng-click="deleteTask(x._id)">X</p>\n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddTask">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenTask.name}} -\n                    <a ng-href="#!/project/{{chosenTask.project._id}}">{{chosenTask.project.name}} </a>\n                </p>\n                <p style="display: inline;">{{chosenTask.priority}} Priority</p>\n                <div class="controller-button">\n                    <p style="display: inline;" ng-click="startTask(chosenTask._id)">\n                        <i class="fas fa-play"></i>\n                    </p>\n                    <p style="display: inline;" ng-click="finishTask(chosenTask._id)">\n                        <i class="fas fa-pause"></i>\n                    </p>\n                    <p style="display: inline;" ng-click="finishTask(chosenTask._id)">\n                        <i class="fas fa-check"></i>\n                    </p>\n                </div>\n            </div>\n            <div class="task-attribute">\n                <div class=\'descTime\'>\n                    <p class="description">Description: {{chosenTask.description}}</p>\n                    <p class="description"> You have worked {{chosenTask.days}} days on this task </p>\n                </div> \n            </div>\n        </div>\n    </div>\n    <div class=\'selected-task\' ng-show="showAddTask">\n        <div class=\'addTask\'>\n            <p class="sub-title-task">{{subTitleTask}}</p>\n            <form>\n                <div class="group">\n                    <input ng-model="task.name" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Name</label>\n                </div>\n\n                <div class="group">\n                    <input ng-model="task.description" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Description</label>\n                </div>\n                <div class="group">\n                    <span style="color: #5264AE">Start Date</span>\n                    <input ng-model="task.startDate" type="date" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                </div>\n                <div class="group">\n                    <span style="color: #5264AE">Deadline</span>\n                    <input ng-model="task.deadline" type="date" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                </div>\n                <div class="group">\n                    <input ng-model="task.priority" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Priority</label>\n                </div>\n\n                <div ng-show="selectProject" class="group">\n                    <select ng-model="task.project">\n                        <option value=\'\' disabled selected>Select one project</option>\n                        <option ng-repeat="project in projects" value="{{project._id}}">{{project.name}}</option>\n                    </select>\n                </div>\n\n            </form>\n            <div style=\'float:right\'>\n                <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\n                <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\n                <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\n            </div>\n        </div>\n\n\n    </div>\n</div>\n</div>'},function(s,n){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <div class="top-content">\n        <p class="title">Project</p>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n            <p class="sub-title">{{content.sideBar.type}}</p>\n            <div class="tasks">\n                <p ng-click="showAddProject = !showAddProject" class=\'green\'>+ Create new Project</p>\n                <div ng-repeat="x in projects" class=\'side-button\' ng-class="getChosen(x)">\n                    <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\n                    <p class="float-right blue" ><i class="fas fa-pencil-alt"></i></p>\n                    <p class="float-right red" ng-click="deleteProject(x)">X</p>                    \n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddProject">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenProject.name}}</p>\n                <p ng-class="getPriority">Priority: {{chosenProject.priority}}</p>\n            </div>\n            <div class="task-attribute">\n                <p class="description">{{chosenProject.description}}</p>\n                <div class="task-button">\n                    <div class="task-buttom-left">\n                        <a class=\'button\' href="#!chart"> Chart</a>\n                    </div>\n                    <div class="task-buttom-right">\n                        <a class=\'button\' ng-href="#!/project/{{chosenProject._id}}">Tasks Details</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\'selected-task\' ng-show="showAddProject">\n            <div class=\'addTask\'>\n                <p class="sub-title-task">Create Project</p>\n                    <form>\n                            <div class="group">      \n                              <input ng-model="task.name" type="text" required>\n                              <span class="highlight"></span>\n                              <span class="bar"></span>\n                              <label>Name</label>\n                            </div>\n                              \n                            <div class="group">      \n                              <input ng-model="task.description" type="text" required>\n                              <span class="highlight"></span>\n                              <span class="bar"></span>\n                              <label>Description</label>\n                            </div>\n                            <div class="group">\n                                <span style="color: #5264AE">Start Date</span>\n                                <input ng-model="task.startDate" type="date" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                            </div>\n                            <div class="group">\n                                <span style="color: #5264AE">Deadline</span>\n                                <input ng-model="task.deadline" type="date" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                            </div>\n                            <div class="group">      \n                                <input ng-model="task.priority" type="text" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                                <label>Priority</label>\n                            </div>\n                            \n                        </form>\n                        <div style=\'float:right\'>\n                                <p id="cancelButton" ng-click="cancelProject()" >Cancel</p> \n                                <p id="addButton" ng-click="addProject(task)">Create</p>        \n                        </div>\n            </div>\n        </div>\n    </div>\n\n</div>'},function(s,n,e){s.exports=function(s){s.when("/project",{template:e(7),controller:"project",resolve:{check:()=>console.log("ha")}}).when("/task",{template:e(6),controller:"task",resolve:{check:()=>console.log("ha")}}).when("/chart",{template:e(5),controller:"chart",resolve:{check:()=>console.log("ha")}}).when("/calendar",{template:e(4),controller:"calendar",resolve:{check:()=>console.log("ha")}}).when("/project/:id",{template:e(3),controller:"projectTasks",resolve:{check:()=>console.log("ha")}})}},function(s,n){s.exports=function(s,n,e){function t(){e.getTasksOfProject(n.id,t=>{s.tasks=t,s.chosenTask=t[0],e.getProjectById(n.id,n=>{s.project=n})})}e.getTasksOfProject(n.id,t=>{s.tasks=t,s.chosenTask=t[0],e.getProjectById(n.id,n=>{s.project=n})}),s.changeContent=function(n){s.chosenTask=n,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.getChosen=function(n){let e="task";return n.finished&&(e+=" finished"),s.chosenTask.name==n.name&&(e+=" selected"),e},s.deleteTask=function(s){e.deleteTask(s,s=>{t()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0,console.log(s.startTask)},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(n){n.project=s.project._id,e.setTask(n,s=>{t()}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,n){e.updateTask(s,n,s=>{alert("Task updated!"),console.log(s)})},s.startTask=function(s){e.startTask(s,s=>{alert("Task created!"),console.log(s)})},s.pauseTask=function(s){e.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){e.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n,e){console.log("charts");var t,a=document.getElementById("chartTasks");Chart.defaults.global.legend.display=!1,s.tasks={name:"Tasks",tasks:[{name:"Talk to the boss",description:"Talk to the boss about TIS",priority:"High"}]},n.getProjects(e=>{s.projects=e,s.chosenProject=e[0],function(){let e=[],t=0;for(let a=0;a<s.projects.length;a++)n.getReports(s.projects[a]._id,n=>{n&&e.push(n),++t===s.projects.length&&(s.projects=e,s.chosenProject=e[0],s.createChart(e[0]))})}()}),s.getTasks=function(e){n.getTasksOfProject(s.projects[e]._id,n=>{s.projects[e].tasks=n,s.projects[e]&&!s.projects[e].prazo&&(s.projects[e].prazo=n.length),s.projects[e]&&!s.projects[e].foraPrazo&&(s.projects[e].foraPrazo=n.length+2)})},s.chosenTask=s.tasks.tasks[0],s.createChart=function(s){t&&t.destroy(),t=new Chart(a,{type:"bar",data:{labels:["No prazo","Atrasadas"],datasets:[{label:"Time Tracking (Tarefas)",data:[s.prazo,s.foraPrazo],backgroundColor:["#f8bbd0","#e91e63"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)"],borderWidth:0}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]},legend:{display:!1},title:{display:!0,text:"Time Tracking - Conclusão das tarefas"}}})},s.getChosen=function(n){let e;return e=s.chosenProject.name===n.name?"task selected":"task"},s.changeContent=(n=>{s.chosenProject=n,s.createChart(n)})}},function(s,n){s.exports=function(s,n){function e(){console.log("getting tasks"),n.getTasks(e=>{console.log(e),s.tasks=e,s.tasks.forEach(s=>{n.getDays(s._id,n=>{s.days=n.diffDays})}),s.chosenTask=s.tasks[0]})}e(),n.getProjects(n=>{s.projects=n}),s.changeContent=function(n){s.chosenTask=n},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.showAddTask=!1,s.getChosen=function(n){let e="task";return n.finished&&(e+=" finished"),s.chosenTask.name==n.name&&(e+=" selected"),e},s.deleteTask=function(s){n.deleteTask(s,s=>{e()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(e){e.startDate&&(e.startDate.setHours(0),e.startDate.setMinutes(1)),e.deadline&&(e.deadline.setHours(23),e.deadline.setMinutes(59)),console.log(e),n.setTask(e,s=>{console.alert("Tarefa "+s.name+" criada com sucesso!")}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,e){n.updateTask(s,e,s=>{console.log(s)})},s.startTask=function(s){n.startTask(s,s=>{console.log(s)})},s.pauseTask=function(s){n.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){n.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n){console.log("calendar"),n.getTasks(n=>{s.tasks=n,console.log(n),s.chosenTask=s.tasks[0]}),s.pad=function(s,n){for(var e=""+s;e.length<n;)e="0"+e;return e};let e=new Date,t=e.getDate(),a=s.pad(e.getMonth()+1,2),i=e.getFullYear();s.diaAtual=t+"/"+a.padStart(2,"0")+"/"+i,s.changeContent=function(n){s.chosenTask=n},s.getChosen=function(n){return s.chosenTask.name===n.name?"task selected":"task"}}},function(s,n){s.exports=function(s,n,e){function t(){e.getProjects(n=>{s.projects=n,s.chosenProject=n[0];for(let n=0;n<s.projects.length;n++)s.getTasks(n)})}t(),s.teste="This is just a test",s.addProject=function(s){e.setProject(s)},s.getTasks=function(n){e.getTasksOfProject(s.projects[n]._id,e=>{s.projects[n].tasks=e})},s.changeContent=(n=>{s.chosenProject=n,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`}),s.getChosen=function(n){return s.chosenProject.name==n.name?"task selected":"task"},s.deleteProject=function(s){n({headers:{auth_key:"9d277d84-665a-4c79-9823-6b1d7d41016e"},method:"DELETE",url:"/project/"+s._id}).then(s=>{t()})},s.cancelProject=function(){s.showAddProject=!s.showAddProject}}},function(s,n){const e="9058c038-5e57-43ab-ad56-24dd603e89b0";s.exports=function(s){this.getProjects=function(n){s({headers:{auth_key:e},method:"GET",url:"/project"}).then(s=>n(s.data))},this.getTasksOfProject=function(n,t){s({headers:{auth_key:e},method:"GET",url:"/task/project/"+n}).then(s=>t(s.data))},this.getProjectById=function(n,t){s({headers:{auth_key:e},method:"GET",url:"/project/"+n}).then(s=>t(s.data))},this.getReports=function(n,t){s({headers:{auth_key:e},method:"GET",url:"/task/"+n+"/reports"}).then(s=>t(s.data))},this.getTasks=function(n){s({headers:{auth_key:e},method:"GET",url:"/task/"}).then(s=>{n(s.data)})},this.setTask=function(n,t){s({headers:{auth_key:e,"Content-Type":"application/json"},data:n,method:"POST",url:"/task/"}).then(s=>{t(s.data)})},this.updateTask=function(n,t){s({headers:{auth_key:e,"Content-Type":"application/json"},data:n,method:"PUT",url:"/task/"+t}).then(s=>{n(s.data)})},this.startTask=function(n){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/start/"+n}).then(s=>{task(s.data)})},this.pauseTask=function(n){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/pause/"+n}).then(s=>{task(s.data)})},this.finishTask=function(n){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/finish/"+n}).then(s=>{task(s.data)})},this.deleteTask=function(n,t){s({headers:{auth_key:e},method:"DELETE",url:"/task/"+n}).then(s=>t(s.data))},this.setProject=function(n,t){s({headers:{auth_key:e,"Content-Type":"application/json"},data:n,method:"POST",url:"/project"}).then(s=>{t(s.data)})},this.getDays=function(n,t){s({headers:{auth_key:e,"Content-Type":"application/json"},data:{task:n},method:"POST",url:"/allTime"}).then(s=>{t(s.data)})}}},,,,,,,,function(s,n,e){"use strict";e.r(n);var t=e(0),a=e.n(t),i=e(2),c=e.n(i),o=e(1),l=e.n(o);const r=a.a.module("willdo",[c.a,l.a]);r.service("$httpController",["$http",e(14)]),r.controller("project",["$scope","$http","$httpController",e(13)]),r.controller("calendar",["$scope","$httpController",e(12)]),r.controller("task",["$scope","$httpController",e(11)]),r.controller("chart",["$scope","$httpController","$http",e(10)]),r.controller("projectTasks",["$scope","$routeParams","$httpController",e(9)]),r.config(["$routeProvider",e(8)])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,