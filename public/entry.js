!function(s){function n(n){for(var e,i,c=n[0],l=n[1],d=n[2],p=0,h=[];p<c.length;p++)i=c[p],a[i]&&h.push(a[i][0]),a[i]=0;for(e in l)Object.prototype.hasOwnProperty.call(l,e)&&(s[e]=l[e]);for(r&&r(n);h.length;)h.shift()();return o.push.apply(o,d||[]),t()}function t(){for(var s,n=0;n<o.length;n++){for(var t=o[n],e=!0,c=1;c<t.length;c++){var l=t[c];0!==a[l]&&(e=!1)}e&&(o.splice(n--,1),s=i(i.s=t[0]))}return s}var e={},a={1:0};var o=[];function i(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return s[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=s,i.c=e,i.d=function(s,n,t){i.o(s,n)||Object.defineProperty(s,n,{configurable:!1,enumerable:!0,get:t})},i.r=function(s){Object.defineProperty(s,"__esModule",{value:!0})},i.n=function(s){var n=s&&s.__esModule?function(){return s.default}:function(){return s};return i.d(n,"a",n),n},i.o=function(s,n){return Object.prototype.hasOwnProperty.call(s,n)},i.p="";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=n,c=c.slice();for(var d=0;d<c.length;d++)n(c[d]);var r=l;o.push([20,0]),t()}([,,,function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\n\n<div class="content">\n  <div class="top-content">\n      <h1 class="title">{{project.name}}</h1>\n  </div>\n  <div class="bottom-content">\n      <div class="tasks-panel">\n          <p class="sub-title">Tasks</p>\n          <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\n          <div class="tasks">\n              <div ng-click=\'changeContent(task)\' ng-repeat="task in tasks" ng-class="getChosen(task)">#{{$index+1}} - {{task.name}}\n                <p class="float-right" ng-click="deleteTask(task._id)">X</p>\n              </div>\n              <a class=\'button\' href="#!/project">Back</a>\n        </div>\n      </div>\n      <div class="selected-task" ng-show="!showAddTask">\n          <div class="top-selected-task">\n              <p class="sub-title-task">{{chosenTask.name}}</p>\n              <p ng-class="getPriority()">Priority: {{chosenTask.priority}}</p>\n          </div>\n          <div class="task-attribute">\n              <p class="description">{{chosenTask.description}}</p>\n              <div class="task-button">\n                  <div class="task-buttom-left">\n                      <a class=\'button\' href="#!timetracker"> Time Tracker</a>\n                      <a ng-show="!chosenTask.finished" ng-click="startTask(chosenTask._id)" class=\'button\'> Start task</a>\n                      <a ng-show="!chosenTask.finished" ng-click="pauseTask(chosenTask._id)" class=\'button\'> Pause task</a>\n                  </div>\n                  <div class="task-buttom-right">\n                    <a class=\'button\' href="#!time">Deadline: {{ chosenTask.deadline }}</a>\n                    <a class=\'button\' href="#!chart"> Chart</a>  \n                    <a class=\'button\' ng-show="!chosenTask.finished" ng-click="finishTask(chosenTask._id)"> Finish task</a>\n                    <a class=\'button\' ng-show="!chosenTask.finished" ng-click="showUpdateTask()"> Update task</a>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\'selected-task\' ng-show="showAddTask">\n            <div class=\'addTask\'>\n                <p class="sub-title-task">{{subTitleTask}}</p>\n                <form>\n                    <div class="group">\n                        <input ng-model="task.name" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Name</label>\n                    </div>\n\n                    <div class="group">\n                        <input ng-model="task.description" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Description</label>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Start Date</span>\n                        <input ng-model="task.startDate" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Deadline</span>\n                        <input ng-model="task.deadline" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <input ng-model="task.priority" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Priority</label>\n                    </div>\n                </form>\n                <div style=\'float:right\'>\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\n                </div>\n            </div>\n\n\n        </div>\n  </div>\n\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\n\n<div class="content">\n    <h1 class="title">Calendar</h1>\n    <center>\n        <div class="calendar-div">\n            <p class="search-date">Date: </p>\n            <p class="search-date">{{diaAtual}}</p>\n            \x3c!-- <input type="text" id="calendario" ng-value="diaAtual" placeholder="26/04/2018"/>--\x3e\n            \x3c!--<a class=\'button chart-button\' href="#!timetracker">Search</a>--\x3e\n        </div>\n\n        <div class="bottom-content">\n            <div class="tasks-panel">\n                <p class="sub-title">Tasks</p>\n                <div class="tasks">\n                    <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\n                </div>\n            </div>\n            <div class="selected-task">\n                <div class="top-selected-task">\n                    <p class="sub-title-task">{{chosenTask.name}}</p>\n                </div>\n                <div class="task-attribute">\n                    <p class="description">{{chosenTask.description}}</p>\n                    <div class="task-button">\n                        <div class="task-buttom-left">\n                            <a class=\'button\' href="#!chart"> Chart</a>\n                        </div>\n                        <div class="task-buttom-right">\n                            <a class=\'button\' href="#!time">Ends in 4d 3h</a>\n                        </div>\n\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    </center>\n\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\n\n<div class="content">\n    <div class="top-content">\n        <h1 class="title">Tasks</h1>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n            <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\n            <div class="tasks">\n                <div ng-click=\'changeContent(x)\' class=\'side-button\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}\n                    <p class="blue" ng-click="showUpdateTask()">\n                        <i class="fas fa-pencil-alt"></i>\n                    </p>\n                    <p class="red" ng-click="deleteTask(x._id)">X</p>\n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddTask">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenTask.name}} -\n                    <a ng-href="#!/project/{{chosenTask.project._id}}">{{chosenTask.project.name}} </a>\n                </p>\n                <p style="display: inline;">{{chosenTask.priority}} Priority</p>\n                <div class="controller-button">\n                    <p style="display: inline;" ng-click="startTask(chosenTask._id)">\n                        <i class="fas fa-play"></i>\n                    </p>\n                    <p style="display: inline;" ng-click="finishTask(chosenTask._id)">\n                        <i class="fas fa-pause"></i>\n                    </p>\n                    <p style="display: inline;" ng-click="finishTask(chosenTask._id)">\n                        <i class="fas fa-check"></i>\n                    </p>\n                </div>\n            </div>\n            <div class="task-attribute">\n                <div class=\'descTime\'>\n                    <p class="description">Description: {{chosenTask.description}}</p>\n                    <p class="description"> You have worked {{chosenTask.days}} days on this task </p>\n                </div> \n            </div>\n        </div>\n    </div>\n    <div class=\'selected-task\' ng-show="showAddTask">\n        <div class=\'addTask\'>\n            <p class="sub-title-task">{{subTitleTask}}</p>\n            <form>\n                <div class="group">\n                    <input ng-model="task.name" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Name</label>\n                </div>\n\n                <div class="group">\n                    <input ng-model="task.description" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Description</label>\n                </div>\n                <div class="group">\n                    <span style="color: #5264AE">Start Date</span>\n                    <input ng-model="task.startDate" type="date" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                </div>\n                <div class="group">\n                    <span style="color: #5264AE">Deadline</span>\n                    <input ng-model="task.deadline" type="date" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                </div>\n                <div class="group">\n                    <input ng-model="task.priority" type="text" required>\n                    <span class="highlight"></span>\n                    <span class="bar"></span>\n                    <label>Priority</label>\n                </div>\n\n                <div ng-show="selectProject" class="group">\n                    <select ng-model="task.project">\n                        <option value=\'\' disabled selected>Select one project</option>\n                        <option ng-repeat="project in projects" value="{{project._id}}">{{project.name}}</option>\n                    </select>\n                </div>\n\n            </form>\n            <div style=\'float:right\'>\n                <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\n                <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\n                <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\n            </div>\n        </div>\n\n\n    </div>\n</div>\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\n<div class="content">\n    <div class="top-content">\n        <h1 class="title">Project</h1>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n            <p class="sub-title">{{content.sideBar.type}}</p>\n            <div class="tasks">\n                <p ng-click="showAddProject = !showAddProject" class=\'green\'>+ Create new Project</p>\n                <div ng-repeat="x in projects" class=\'side-button\' ng-class="getChosen(x)">\n                    <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\n                    <p class="float-right blue">\n                        <i class="fas fa-pencil-alt"></i>\n                    </p>\n                    <p class="float-right red" ng-click="deleteProject(x)">X</p>\n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddProject">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenProject.name}}</p>\n                <p ng-class="getPriority">Priority: {{chosenProject.priority}}</p>\n                <a class=\'button\' ng-href="#!/project/{{chosenProject._id}}">Tasks Details</a>                \n            </div>\n            <div class="task-attribute">\n                <p class="description">{{chosenProject.description}}</p>\n                <div class="chart-container" style="position: relative; height:30vh; width:60vw">\n                    <canvas id="chartTasks"></canvas>\n                </div>\n            </div>\n            <div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\'selected-task\' ng-show="showAddProject">\n    <div class=\'addTask\'>\n        <p class="sub-title-task">Create Project</p>\n        <form>\n            <div class="group">\n                <input ng-model="task.name" type="text" required>\n                <span class="highlight"></span>\n                <span class="bar"></span>\n                <label>Name</label>\n            </div>\n\n            <div class="group">\n                <input ng-model="task.description" type="text" required>\n                <span class="highlight"></span>\n                <span class="bar"></span>\n                <label>Description</label>\n            </div>\n            <div class="group">\n                <span style="color: #5264AE">Start Date</span>\n                <input ng-model="task.startDate" type="date" required>\n                <span class="highlight"></span>\n                <span class="bar"></span>\n            </div>\n            <div class="group">\n                <span style="color: #5264AE">Deadline</span>\n                <input ng-model="task.deadline" type="date" required>\n                <span class="highlight"></span>\n                <span class="bar"></span>\n            </div>\n            <div class="group">\n                <input ng-model="task.priority" type="text" required>\n                <span class="highlight"></span>\n                <span class="bar"></span>\n                <label>Priority</label>\n            </div>\n\n        </form>\n        <div style=\'float:right\'>\n            <p id="cancelButton" ng-click="cancelProject()">Cancel</p>\n            <p id="addButton" ng-click="addProject(task)">Create</p>\n        </div>\n    </div>\n</div>\n</div>\n\n</div>'},function(s,n,t){s.exports=function(s){s.when("/project",{template:t(6),controller:"project",resolve:{check:()=>console.log("ha")}}).when("/task",{template:t(5),controller:"task",resolve:{check:()=>console.log("ha")}}).when("/calendar",{template:t(4),controller:"calendar",resolve:{check:()=>console.log("ha")}}).when("/project/:id",{template:t(3),controller:"projectTasks",resolve:{check:()=>console.log("ha")}})}},function(s,n){s.exports=function(s,n,t){function e(){t.getTasksOfProject(n.id,e=>{s.tasks=e,s.chosenTask=e[0],t.getProjectById(n.id,n=>{s.project=n})})}t.getTasksOfProject(n.id,e=>{s.tasks=e,s.chosenTask=e[0],t.getProjectById(n.id,n=>{s.project=n})}),s.changeContent=function(n){s.chosenTask=n,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.getChosen=function(n){let t="task";return n.finished&&(t+=" finished"),s.chosenTask.name==n.name&&(t+=" selected"),t},s.deleteTask=function(s){t.deleteTask(s,s=>{e()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0,console.log(s.startTask)},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(n){n.project=s.project._id,t.setTask(n,s=>{e()}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,n){t.updateTask(s,n,s=>{alert("Task updated!"),console.log(s)})},s.startTask=function(s){t.startTask(s,s=>{alert("Task created!"),console.log(s)})},s.pauseTask=function(s){t.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){t.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n){function t(){console.log("getting tasks"),n.getTasks(t=>{console.log(t),s.tasks=t,s.tasks.forEach(s=>{n.getDays(s._id,n=>{s.days=n.diffDays})}),s.chosenTask=s.tasks[0]})}t(),n.getProjects(n=>{s.projects=n}),s.changeContent=function(n){s.chosenTask=n},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.showAddTask=!1,s.getChosen=function(n){let t="task";return n.finished&&(t+=" finished"),s.chosenTask.name==n.name&&(t+=" selected"),t},s.deleteTask=function(s){n.deleteTask(s,s=>{t()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(t){t.startDate&&(t.startDate.setHours(0),t.startDate.setMinutes(1)),t.deadline&&(t.deadline.setHours(23),t.deadline.setMinutes(59)),console.log(t),n.setTask(t,s=>{console.alert("Tarefa "+s.name+" criada com sucesso!")}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,t){n.updateTask(s,t,s=>{console.log(s)})},s.startTask=function(s){n.startTask(s,s=>{console.log(s)})},s.pauseTask=function(s){n.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){n.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n){console.log("calendar"),n.getTasks(n=>{s.tasks=n,console.log(n),s.chosenTask=s.tasks[0]}),s.pad=function(s,n){for(var t=""+s;t.length<n;)t="0"+t;return t};let t=new Date,e=t.getDate(),a=s.pad(t.getMonth()+1,2),o=t.getFullYear();s.diaAtual=e+"/"+a.padStart(2,"0")+"/"+o,s.changeContent=function(n){s.chosenTask=n},s.getChosen=function(n){return s.chosenTask.name===n.name?"task selected":"task"}}},function(s,n){s.exports=function(s,n,t){o();var e,a=document.getElementById("chartTasks");function o(){t.getProjects(n=>{s.projects=n,s.chosenProject=n[0],i();for(let n=0;n<s.projects.length;n++)s.getTasks(n)})}function i(){t.getReports(s.chosenProject._id,n=>{console.log(n),s.createChart(n)})}Chart.defaults.global.legend.display=!1,s.teste="This is just a test",s.addProject=function(s){t.setProject(s)},s.getTasks=function(n){t.getTasksOfProject(s.projects[n]._id,t=>{s.projects[n].tasks=t})},s.changeContent=(n=>{s.chosenProject=n,i()}),s.getChosen=function(n){return s.chosenProject.name==n.name?"task selected":"task"},s.deleteProject=function(s){n({headers:{auth_key:"8e8281d3-1a09-452c-b218-a6566a09c7a7"},method:"DELETE",url:"/project/"+s._id}).then(s=>{o()})},s.cancelProject=function(){s.showAddProject=!s.showAddProject},s.createChart=function(s){e&&e.destroy(),e=new Chart(a,{type:"bar",data:{labels:["No prazo","Atrasadas"],datasets:[{label:"Time Tracking (Tarefas)",data:[s.prazo,s.foraPrazo],backgroundColor:["#f8bbd0","#e91e63"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)"],borderWidth:0}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]},legend:{display:!1},title:{display:!0,text:"Time Tracking - Conclusão das tarefas"}}})}}},function(s,n){const t="8e8281d3-1a09-452c-b218-a6566a09c7a7";s.exports=function(s){this.getProjects=function(n){s({headers:{auth_key:t},method:"GET",url:"/project"}).then(s=>n(s.data))},this.getTasksOfProject=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/task/project/"+n}).then(s=>e(s.data))},this.getProjectById=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/project/"+n}).then(s=>e(s.data))},this.getReports=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/task/"+n+"/reports"}).then(s=>e(s.data))},this.getTasks=function(n){s({headers:{auth_key:t},method:"GET",url:"/task/"}).then(s=>{n(s.data)})},this.setTask=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"POST",url:"/task/"}).then(s=>{e(s.data)})},this.updateTask=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"PUT",url:"/task/"+e}).then(s=>{n(s.data)})},this.startTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/start/"+n}).then(s=>{task(s.data)})},this.pauseTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/pause/"+n}).then(s=>{task(s.data)})},this.finishTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/finish/"+n}).then(s=>{task(s.data)})},this.deleteTask=function(n,e){s({headers:{auth_key:t},method:"DELETE",url:"/task/"+n}).then(s=>e(s.data))},this.setProject=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"POST",url:"/project"}).then(s=>{e(s.data)})},this.getDays=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:{task:n},method:"POST",url:"/allTime"}).then(s=>{e(s.data)})}}},,,,,,,,function(s,n,t){"use strict";t.r(n);var e=t(0),a=t.n(e),o=t(2),i=t.n(o),c=t(1),l=t.n(c);const d=a.a.module("willdo",[i.a,l.a]);d.service("$httpController",["$http",t(12)]),d.controller("project",["$scope","$http","$httpController",t(11)]),d.controller("calendar",["$scope","$httpController",t(10)]),d.controller("task",["$scope","$httpController",t(9)]),d.controller("projectTasks",["$scope","$routeParams","$httpController",t(8)]),d.config(["$routeProvider",t(7)])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,