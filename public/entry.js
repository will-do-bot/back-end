!function(s){function n(n){for(var e,o,i=n[0],c=n[1],l=n[2],p=0,h=[];p<i.length;p++)o=i[p],a[o]&&h.push(a[o][0]),a[o]=0;for(e in c)Object.prototype.hasOwnProperty.call(c,e)&&(s[e]=c[e]);for(d&&d(n);h.length;)h.shift()();return r.push.apply(r,l||[]),t()}function t(){for(var s,n=0;n<r.length;n++){for(var t=r[n],e=!0,i=1;i<t.length;i++){var c=t[i];0!==a[c]&&(e=!1)}e&&(r.splice(n--,1),s=o(o.s=t[0]))}return s}var e={},a={1:0};var r=[];function o(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return s[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=s,o.c=e,o.d=function(s,n,t){o.o(s,n)||Object.defineProperty(s,n,{configurable:!1,enumerable:!0,get:t})},o.r=function(s){Object.defineProperty(s,"__esModule",{value:!0})},o.n=function(s){var n=s&&s.__esModule?function(){return s.default}:function(){return s};return o.d(n,"a",n),n},o.o=function(s,n){return Object.prototype.hasOwnProperty.call(s,n)},o.p="";var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=n,i=i.slice();for(var l=0;l<i.length;l++)n(i[l]);var d=c;r.push([20,0]),t()}([,,,function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\r\n\r\n<div class="content">\r\n  <div class="top-content">\r\n      <h1 class="title">{{project.name}}</h1>\r\n  </div>\r\n  <div class="bottom-content">\r\n      <div class="tasks-panel">\r\n          <p class="sub-title">Tasks</p>\r\n          <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\r\n          <div class="tasks">\r\n              <div ng-click=\'changeContent(task)\' ng-repeat="task in tasks" ng-class="getChosen(task)">#{{$index+1}} - {{task.name}}\r\n                <p class="float-right" ng-click="deleteTask(task._id)">X</p>\r\n              </div>\r\n              <a class=\'button\' href="#!/project">Back</a>\r\n        </div>\r\n      </div>\r\n      <div class="selected-task" ng-show="!showAddTask">\r\n          <div class="top-selected-task">\r\n              <p class="sub-title-task">{{chosenTask.name}}</p>\r\n              <p ng-class="getPriority()">Priority: {{chosenTask.priority}}</p>\r\n          </div>\r\n          <div class="task-attribute">\r\n              <p class="description">{{chosenTask.description}}</p>\r\n              <div class="task-button">\r\n                  <div class="task-buttom-left">\r\n                      <a class=\'button\' href="#!timetracker"> Time Tracker</a>\r\n                      <a ng-show="!chosenTask.finished" ng-click="startTask(chosenTask._id)" class=\'button\'> Start task</a>\r\n                      <a ng-show="!chosenTask.finished" ng-click="pauseTask(chosenTask._id)" class=\'button\'> Pause task</a>\r\n                  </div>\r\n                  <div class="task-buttom-right">\r\n                    <a class=\'button\' href="#!time">Deadline: {{ chosenTask.deadline }}</a>\r\n                    <a class=\'button\' href="#!chart"> Chart</a>  \r\n                    <a class=\'button\' ng-show="!chosenTask.finished" ng-click="finishTask(chosenTask._id)"> Finish task</a>\r\n                    <a class=\'button\' ng-show="!chosenTask.finished" ng-click="showUpdateTask()"> Update task</a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\'selected-task\' ng-show="showAddTask">\r\n            <div class=\'addTask\'>\r\n                <p class="sub-title-task">{{subTitleTask}}</p>\r\n                <form>\r\n                    <div class="group">\r\n                        <input ng-model="task.name" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Name</label>\r\n                    </div>\r\n\r\n                    <div class="group">\r\n                        <input ng-model="task.description" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Start Date</span>\r\n                        <input ng-model="task.startDate" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Deadline</span>\r\n                        <input ng-model="task.deadline" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <input ng-model="task.priority" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Priority</label>\r\n                    </div>\r\n                </form>\r\n                <div style=\'float:right\'>\r\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\r\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\r\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n  </div>\r\n\r\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\r\n\r\n<div class="content">\r\n    <h1 class="title">Calendar</h1>\r\n    <center>\r\n        <div class="calendar-div">\r\n            <p class="search-date">Date: </p>\r\n            <p class="search-date">{{diaAtual}}</p>\r\n            \x3c!-- <input type="text" id="calendario" ng-value="diaAtual" placeholder="26/04/2018"/>--\x3e\r\n            \x3c!--<a class=\'button chart-button\' href="#!timetracker">Search</a>--\x3e\r\n        </div>\r\n\r\n        <div class="bottom-content">\r\n            <div class="tasks-panel">\r\n                <p class="sub-title">Tasks</p>\r\n                <div class="tasks">\r\n                    <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="selected-task">\r\n                <div class="top-selected-task">\r\n                    <p class="sub-title-task">{{chosenTask.name}}</p>\r\n                </div>\r\n                <div class="task-attribute">\r\n                    <p class="description">{{chosenTask.description}}</p>\r\n                    <div class="task-button">\r\n                        <div class="task-buttom-left">\r\n                            <a class=\'button\' href="#!chart"> Chart</a>\r\n                        </div>\r\n                        <div class="task-buttom-right">\r\n                            <a class=\'button\' href="#!time">Ends in 4d 3h</a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </center>\r\n\r\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\r\n\r\n<div class="content">\r\n    <div class="top-content">\r\n        <h1 class="title">Tasks</h1>\r\n    </div>\r\n    <div class="bottom-content">\r\n        <div class="tasks-panel">\r\n            <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\r\n            <div class="tasks">\r\n                <div ng-click=\'changeContent(x)\' class=\'side-button\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}\r\n                    <p class="blue" ng-click="showUpdateTask()">\r\n                        <i class="fas fa-pencil-alt"></i>\r\n                    </p>\r\n                    <p class="red" ng-click="deleteTask(x._id)">X</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="selected-task" ng-show="!showAddTask">\r\n            <div class="top-selected-task">\r\n                <p class="sub-title-task">{{chosenTask.name}} -\r\n                    <a ng-href="#!/project/{{chosenTask.project._id}}">{{chosenTask.project.name}} </a>\r\n                </p>\r\n                <p style="display: inline;">{{chosenTask.priority}} Priority</p>\r\n                <div class="controller-button">\r\n                    <p style="display: inline;" ng-click="startTask(chosenTask._id)">\r\n                        <i class="fas fa-play"></i>\r\n                    </p>\r\n                    <p style="display: inline;" ng-click="pauseTask(chosenTask._id)"> \r\n                        <i class="fas fa-pause"></i>\r\n                    </p>\r\n                    <p style="display: inline;" ng-click="finishTask(chosenTask._id)">\r\n                        <i class="fas fa-check"></i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class="task-attribute">\r\n                <div class=\'descTime\'>\r\n                    <p class="description">Description: {{chosenTask.description}}</p>\r\n                    <p class="description"> You have worked {{chosenTask.days}} days on this task </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\'selected-task\' ng-show="showAddTask">\r\n            <div class=\'addTask\'>\r\n                <p class="sub-title-task">{{subTitleTask}}</p>\r\n                <form>\r\n                    <div class="group">\r\n                        <input ng-model="task.name" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Name</label>\r\n                    </div>\r\n\r\n                    <div class="group">\r\n                        <input ng-model="task.description" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Start Date</span>\r\n                        <input ng-model="task.startDate" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Deadline</span>\r\n                        <input ng-model="task.deadline" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <input ng-model="task.priority" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Priority</label>\r\n                    </div>\r\n\r\n                    <div ng-show="selectProject" class="group">\r\n                        <select ng-model="task.project">\r\n                            <option value=\'\' disabled selected>Select one project</option>\r\n                            <option ng-repeat="project in projects" value="{{project._id}}">{{project.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n                <div style=\'float:right\'>\r\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\r\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\r\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>'},function(s,n){s.exports='<div ng-include="\'sidebar.html\'"></div>\r\n<div class="content">\r\n    <div class="top-content">\r\n        <h1 class="title">Project</h1>\r\n    </div>\r\n    <div class="bottom-content">\r\n        <div class="tasks-panel">\r\n            <p class="sub-title">{{content.sideBar.type}}</p>\r\n            <div class="tasks">\r\n                <p ng-click="showAddProject = !showAddProject" class=\'green\'>+ Create new Project</p>\r\n                <div ng-repeat="x in projects" class=\'side-button\' ng-class="getChosen(x)">\r\n                    <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\r\n                    <p class="float-right blue">\r\n                        <i class="fas fa-pencil-alt"></i>\r\n                    </p>\r\n                    <p class="float-right red" ng-click="deleteProject(x)">X</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="selected-task" ng-show="!showAddProject">\r\n            <div class="top-selected-task">\r\n                <p class="sub-title-task">{{chosenProject.name}}</p>\r\n                <p ng-class="getPriority">Priority: {{chosenProject.priority}}</p>\r\n                <a class=\'button\' ng-href="#!/project/{{chosenProject._id}}">Tasks Details</a>\r\n            </div>\r\n            <div class="task-attribute">\r\n                <p class="description">{{chosenProject.description}}</p>\r\n                <div class="chart-container" style="position: relative; height:30vh; width:60vw">\r\n                    <canvas id="chartTasks"></canvas>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <div class=\'selected-task\' ng-show="showAddProject">\r\n            <div class=\'addTask\'>\r\n                <p class="sub-title-task">Create Project</p>\r\n                <form>\r\n                    <div class="group">\r\n                        <input ng-model="task.name" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Name</label>\r\n                    </div>\r\n\r\n                    <div class="group">\r\n                        <input ng-model="task.description" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Start Date</span>\r\n                        <input ng-model="task.startDate" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Deadline</span>\r\n                        <input ng-model="task.deadline" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <input ng-model="task.priority" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Priority</label>\r\n                    </div>\r\n\r\n                </form>\r\n                <div style=\'float:right\'>\r\n                    <p id="cancelButton" ng-click="cancelProject()">Cancel</p>\r\n                    <p id="addButton" ng-click="addProject(task)">Create</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n\r\n</div>'},function(s,n,t){s.exports=function(s){s.when("/project",{template:t(6),controller:"project",resolve:{check:()=>console.log("ha")}}).when("/task",{template:t(5),controller:"task",resolve:{check:()=>console.log("ha")}}).when("/calendar",{template:t(4),controller:"calendar",resolve:{check:()=>console.log("ha")}}).when("/project/:id",{template:t(3),controller:"projectTasks",resolve:{check:()=>console.log("ha")}})}},function(s,n){s.exports=function(s,n,t){function e(){t.getTasksOfProject(n.id,e=>{s.tasks=e,s.chosenTask=e[0],t.getProjectById(n.id,n=>{s.project=n})})}t.getTasksOfProject(n.id,e=>{s.tasks=e,s.chosenTask=e[0],t.getProjectById(n.id,n=>{s.project=n})}),s.changeContent=function(n){s.chosenTask=n,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.getChosen=function(n){let t="task";return n.finished&&(t+=" finished"),s.chosenTask.name==n.name&&(t+=" selected"),t},s.deleteTask=function(s){t.deleteTask(s,s=>{e()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0,console.log(s.startTask)},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(n){n.project=s.project._id,t.setTask(n,s=>{e()}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,n){t.updateTask(s,n,s=>{alert("Task updated!"),console.log(s)})},s.startTask=function(s){t.startTask(s,s=>{alert("Task created!"),console.log(s)})},s.pauseTask=function(s){t.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){t.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n){function t(){console.log("getting tasks"),n.getTasks(t=>{console.log(t),s.tasks=t,s.tasks.forEach(s=>{n.getDays(s._id,n=>{s.days=n.diffDays})}),s.chosenTask=s.tasks[0]})}t(),n.getProjects(n=>{s.projects=n}),s.changeContent=function(n){s.chosenTask=n},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.showAddTask=!1,s.getChosen=function(n){let t="task";return n.finished&&(t+=" finished"),s.chosenTask.name==n.name&&(t+=" selected"),t},s.deleteTask=function(s){n.deleteTask(s,s=>{t()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0},s.showUpdateTask=function(n){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(t){t.startDate&&(t.startDate.setHours(0),t.startDate.setMinutes(1)),t.deadline&&(t.deadline.setHours(23),t.deadline.setMinutes(59)),console.log(t),n.setTask(t,s=>{console.alert("Tarefa "+s.name+" criada com sucesso!")}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,t){n.updateTask(s,t,s=>{console.log(s)})},s.startTask=function(s){n.startTask(s,s=>{console.log(s)})},s.pauseTask=function(s){n.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){n.finishTask(s,s=>{console.log(s)})}}},function(s,n){s.exports=function(s,n){console.log("calendar"),n.getTasks(n=>{s.tasks=n,console.log(n),s.chosenTask=s.tasks[0]}),s.pad=function(s,n){for(var t=""+s;t.length<n;)t="0"+t;return t};let t=new Date,e=t.getDate(),a=s.pad(t.getMonth()+1,2),r=t.getFullYear();s.diaAtual=e+"/"+a.padStart(2,"0")+"/"+r,s.changeContent=function(n){s.chosenTask=n},s.getChosen=function(n){return s.chosenTask.name===n.name?"task selected":"task"}}},function(s,n){s.exports=function(s,n,t){r();var e,a=document.getElementById("chartTasks");function r(){t.getProjects(n=>{s.projects=n,s.chosenProject=n[0],o();for(let n=0;n<s.projects.length;n++)s.getTasks(n)})}function o(){t.getReports(s.chosenProject._id,n=>{console.log(n),s.createChart(n)})}Chart.defaults.global.legend.display=!1,s.teste="This is just a test",s.addProject=function(s){t.setProject(s)},s.getTasks=function(n){t.getTasksOfProject(s.projects[n]._id,t=>{s.projects[n].tasks=t})},s.changeContent=(n=>{s.chosenProject=n,o()}),s.getChosen=function(n){return s.chosenProject.name==n.name?"task selected":"task"},s.deleteProject=function(s){n({headers:{auth_key:"8e8281d3-1a09-452c-b218-a6566a09c7a7"},method:"DELETE",url:"/project/"+s._id}).then(s=>{r()})},s.cancelProject=function(){s.showAddProject=!s.showAddProject},s.createChart=function(s){e&&e.destroy(),e=new Chart(a,{type:"bar",data:{labels:["No prazo","Atrasadas"],datasets:[{label:"Time Tracking (Tarefas)",data:[s.prazo,s.foraPrazo],backgroundColor:["#f8bbd0","#e91e63"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)"],borderWidth:0}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]},legend:{display:!1},title:{display:!0,text:"Time Tracking - Conclusão das tarefas"}}})}}},function(s,n){const t="8e8281d3-1a09-452c-b218-a6566a09c7a7";s.exports=function(s){this.getProjects=function(n){s({headers:{auth_key:t},method:"GET",url:"/project"}).then(s=>n(s.data))},this.getTasksOfProject=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/task/project/"+n}).then(s=>e(s.data))},this.getProjectById=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/project/"+n}).then(s=>e(s.data))},this.getReports=function(n,e){s({headers:{auth_key:t},method:"GET",url:"/task/"+n+"/reports"}).then(s=>e(s.data))},this.getTasks=function(n){s({headers:{auth_key:t},method:"GET",url:"/task/"}).then(s=>{n(s.data)})},this.setTask=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"POST",url:"/task/"}).then(s=>{e(s.data)})},this.updateTask=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"PUT",url:"/task/"+e}).then(s=>{n(s.data)})},this.startTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/start/"+n}).then(s=>{task(s.data)})},this.pauseTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/pause/"+n}).then(s=>{task(s.data)})},this.finishTask=function(n){s({headers:{auth_key:t,"Content-Type":"application/json"},method:"POST",url:"/task/finish/"+n}).then(s=>{task(s.data)})},this.deleteTask=function(n,e){s({headers:{auth_key:t},method:"DELETE",url:"/task/"+n}).then(s=>e(s.data))},this.setProject=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:n,method:"POST",url:"/project"}).then(s=>{e(s.data)})},this.getDays=function(n,e){s({headers:{auth_key:t,"Content-Type":"application/json"},data:{task:n},method:"POST",url:"/allTime"}).then(s=>{e(s.data)})}}},,,,,,,,function(s,n,t){"use strict";t.r(n);var e=t(0),a=t.n(e),r=t(2),o=t.n(r),i=t(1),c=t.n(i);const l=a.a.module("willdo",[o.a,c.a]);l.service("$httpController",["$http",t(12)]),l.controller("project",["$scope","$http","$httpController",t(11)]),l.controller("calendar",["$scope","$httpController",t(10)]),l.controller("task",["$scope","$httpController",t(9)]),l.controller("projectTasks",["$scope","$routeParams","$httpController",t(8)]),l.config(["$routeProvider",t(7)])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,