!function(s){function t(t){for(var n,i,c=t[0],o=t[1],l=t[2],p=0,h=[];p<c.length;p++)i=c[p],a[i]&&h.push(a[i][0]),a[i]=0;for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(s[n]=o[n]);for(d&&d(t);h.length;)h.shift()();return r.push.apply(r,l||[]),e()}function e(){for(var s,t=0;t<r.length;t++){for(var e=r[t],n=!0,c=1;c<e.length;c++){var o=e[c];0!==a[o]&&(n=!1)}n&&(r.splice(t--,1),s=i(i.s=e[0]))}return s}var n={},a={1:0},r=[];function i(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return s[t].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=s,i.c=n,i.d=function(s,t,e){i.o(s,t)||Object.defineProperty(s,t,{configurable:!1,enumerable:!0,get:e})},i.r=function(s){Object.defineProperty(s,"__esModule",{value:!0})},i.n=function(s){var t=s&&s.__esModule?function(){return s.default}:function(){return s};return i.d(t,"a",t),t},i.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},i.p="";var c=window.webpackJsonp=window.webpackJsonp||[],o=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var d=o;r.push([22,0]),e()}([,,,function(s,t){s.exports='<div class="sidebar">\r\n    <div class="sidebar-top">\r\n        <div class="sidebar-item logo">\r\n        </div>\r\n        <div class="sidebar-item user">\r\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\r\n            <p class="username">Matheus de Assis</p>\r\n        </div>\r\n    </div>\r\n    <div class="sidebar-bottom">\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\r\n            <a href="#!project" class="menu-item">PROJECTS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!task" class="menu-item">TASKS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!chart" class="menu-item">CHARTS </a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="content">\r\n  <div class="top-content">\r\n      <p class="title">{{project.name}}</p>\r\n  </div>\r\n  <div class="bottom-content">\r\n      <div class="tasks-panel">\r\n          <p class="sub-title">Tasks</p>\r\n          <div class="tasks">\r\n              <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\r\n          </div>\r\n      </div>\r\n      <div class="selected-task">\r\n          <div class="top-selected-task">\r\n              <p class="sub-title-task">{{chosenTask.name}}</p>\r\n              <p ng-class="getPriority()">Priority: {{chosenTask.priority}}</p>\r\n          </div>\r\n          <div class="task-attribute">\r\n              <p class="description">{{chosenTask.description}}</p>\r\n              <div class="task-button">\r\n                  <div class="task-buttom-left">\r\n                      <a class=\'button\' href="#!timetracker"> Time Tracker</a>\r\n                      <a class=\'button\' href="#!chart"> Chart</a>\r\n                  </div>\r\n                  <div class="task-buttom-right">\r\n                      <a class=\'button\' href="#!time">Deadline: {{ chosenTask.deadline }}</a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n\r\n</div>'},function(s,t){s.exports='<div class="sidebar">\r\n    <div class="sidebar-top">\r\n        <div class="sidebar-item logo">\r\n        </div>\r\n        <div class="sidebar-item user">\r\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\r\n            <p class="username">Matheus de Assis</p>\r\n        </div>\r\n    </div>\r\n    <div class="sidebar-bottom">\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\r\n            <a href="#!project" class="menu-item">PROJECTS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!task" class="menu-item">TASKS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!chart" class="menu-item">CHARTS </a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="content">\r\n    <h1 class="title">Calendar</h1>\r\n    <center>\r\n        <div class="calendar-div">\r\n            <p class="search-date">Date: </p>\r\n            <p class="search-date">{{diaAtual}}</p>\r\n            \x3c!-- <input type="text" id="calendario" ng-value="diaAtual" placeholder="26/04/2018"/>--\x3e\r\n            \x3c!--<a class=\'button chart-button\' href="#!timetracker">Search</a>--\x3e\r\n        </div>\r\n\r\n        <div class="bottom-content">\r\n            <div class="tasks-panel">\r\n                <p class="sub-title">Tasks</p>\r\n                <div class="tasks">\r\n                    <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="selected-task">\r\n                <div class="top-selected-task">\r\n                    <p class="sub-title-task">{{chosenTask.name}}</p>\r\n                </div>\r\n                <div class="task-attribute">\r\n                    <p class="description">{{chosenTask.description}}</p>\r\n                    <div class="task-button">\r\n                        <div class="task-buttom-left">\r\n                            <a class=\'button\' href="#!chart"> Chart</a>\r\n                        </div>\r\n                        <div class="task-buttom-right">\r\n                            <a class=\'button\' href="#!time">Ends in 4d 3h</a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </center>\r\n\r\n</div>'},function(s,t){s.exports='<div class="sidebar">\r\n    <div class="sidebar-top">\r\n        <div class="sidebar-item logo">\r\n        </div>\r\n        <div class="sidebar-item user">\r\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\r\n            <p class="username">Matheus de Assis</p>\r\n        </div>\r\n    </div>\r\n    <div class="sidebar-bottom">\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\r\n            <a href="#!project" class="menu-item">PROJECTS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!task" class="menu-item">TASKS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!chart" class="menu-item">CHARTS </a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="content">\r\n    <h1 class="title"> Chart</h1>\r\n    <center>\r\n        <div class="bottom-content">\r\n            <div class="tasks-panel">\r\n                <p class="sub-title">{{content.sideBar.type}}</p>\r\n                <div class="tasks">\r\n                    <p class="sub-title">Projects</p>\r\n                    <div ng-repeat="x in projects" ng-class="getChosen(x)">\r\n                        <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="selected-task">\r\n                <div class="top-selected-task">\r\n                    <p class="sub-title-task">{{chosenProject.name}}</p>\r\n                </div>\r\n                <div class="task-attribute">\r\n                    <div class="task-button">\r\n                        <div class="chart-container" style="position: relative; height:30vh; width:60vw">\r\n                            <canvas id="chartTasks"></canvas>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </center>\r\n</div>'},function(s,t){s.exports='<div class="sidebar">\r\n    <div class="sidebar-top">\r\n        <div class="sidebar-item logo">\r\n        </div>\r\n        <div class="sidebar-item user">\r\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\r\n            <p class="username">Matheus de Assis</p>\r\n        </div>\r\n    </div>\r\n    <div class="sidebar-bottom">\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\r\n            <a href="#!project" class="menu-item">PROJECTS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!task" class="menu-item">TASKS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!chart" class="menu-item">CHARTS </a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="content">\r\n    <div class="top-content">\r\n        <p class="title">Tasks</p>\r\n    </div>\r\n    <div class="bottom-content">\r\n        <div class="tasks-panel">\r\n            -\r\n            <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\r\n            <div class="tasks">\r\n                <div ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}\r\n                    <p class="float-right" ng-click="deleteTask(x._id)">X</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="selected-task" ng-show="!showAddTask">\r\n            <div class="top-selected-task">\r\n                <p class="sub-title-task">{{chosenTask.name}} -\r\n                    <a ng-href="#!/project/{{chosenTask.project._id}}">{{chosenTask.project.name}} </a>\r\n                </p>\r\n\r\n                <p ng-class="getPriority()">{{chosenTask.priority}} Priority</p>\r\n            </div>\r\n            <div class="task-attribute">\r\n                <p class="description">{{chosenTask.description}}</p>\r\n                <div class="task-button">\r\n                    <div class="task-buttom-left">\r\n                        <a class=\'button\'> You have worked {{chosenTask.days}} days on this task </a>\r\n                        <a ng-click="startTask(chosenTask._id)" class=\'button\'> Start task</a>\r\n                        <a ng-click="pauseTask(chosenTask._id)" class=\'button\'> Pause task</a>\r\n                    </div>\r\n                    <div class="task-buttom-right">\r\n                        <a class=\'button\' href="#!chart"> Chart</a>\r\n                        <a ng-click="finishTask(chosenTask._id)" class=\'button\'> Finish task</a>\r\n                        <a ng-click="showUpdateTask()" class=\'button\'> Update task</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\'selected-task\' ng-show="showAddTask">\r\n            <div class=\'addTask\'>\r\n                <p class="sub-title-task">{{subTitleTask}}</p>\r\n                <form>\r\n                    <div class="group">\r\n                        <input ng-model="task.name" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Name</label>\r\n                    </div>\r\n\r\n                    <div class="group">\r\n                        <input ng-model="task.description" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Start Date</span>\r\n                        <input ng-model="task.startDate" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <span style="color: #5264AE">Deadline</span>\r\n                        <input ng-model="task.deadline" type="date" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                    </div>\r\n                    <div class="group">\r\n                        <input ng-model="task.priority" type="text" required>\r\n                        <span class="highlight"></span>\r\n                        <span class="bar"></span>\r\n                        <label>Priority</label>\r\n                    </div>\r\n\r\n                    <div ng-show="selectProject" class="group">\r\n                        <select ng-model="task.project">\r\n                            <option value=\'\' disabled selected>Select one project</option>\r\n                            <option ng-repeat="project in projects" value="{{project._id}}">{{project.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </form>\r\n                <div style=\'float:right\'>\r\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\r\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\r\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>'},function(s,t){s.exports='<div class="sidebar">\r\n    <div class="sidebar-top">\r\n        <div class="sidebar-item logo">\r\n        </div>\r\n        <div class="sidebar-item user">\r\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\r\n            <p class="username">Matheus de Assis</p>\r\n        </div>\r\n    </div>\r\n    <div class="sidebar-bottom">\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\r\n            <a href="#!project" class="menu-item">PROJECTS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!task" class="menu-item">TASKS</a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!chart" class="menu-item">CHARTS </a>\r\n        </div>\r\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\r\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="content">\r\n    <div class="top-content">\r\n        <p class="title">Project</p>\r\n    </div>\r\n    <div class="bottom-content">\r\n        <div class="tasks-panel">\r\n            <p class="sub-title">{{content.sideBar.type}}</p>\r\n            <div class="tasks">\r\n                <p ng-click="showAddProject = !showAddProject" class=\'green\'>+ Create new Project</p>\r\n                <div ng-repeat="x in projects" ng-class="getChosen(x)">\r\n                    <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\r\n                    <p class="float-right" ng-click="deleteProject(x)">X</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="selected-task" ng-show="!showAddProject">\r\n            <div class="top-selected-task">\r\n                <p class="sub-title-task">{{chosenProject.name}}</p>\r\n                <p ng-class="getPriority">Priority: {{chosenProject.priority}}</p>\r\n            </div>\r\n            <div class="task-attribute">\r\n                <p class="description">{{chosenProject.description}}</p>\r\n                <div class="task-button">\r\n                    <div class="task-buttom-left">\r\n                        <a class=\'button\' href="#!chart"> Time Tracker</a>\r\n                    </div>\r\n                    <div class="task-buttom-right">\r\n                        <a class=\'button\' ng-href="#!/project/{{chosenProject._id}}">Tasks Details</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\'selected-task\' ng-show="showAddProject">\r\n            <div class=\'addTask\'>\r\n                <p class="sub-title-task">Create Project</p>\r\n                    <form>\r\n                            <div class="group">      \r\n                              <input ng-model="task.name" type="text" required>\r\n                              <span class="highlight"></span>\r\n                              <span class="bar"></span>\r\n                              <label>Name</label>\r\n                            </div>\r\n                              \r\n                            <div class="group">      \r\n                              <input ng-model="task.description" type="text" required>\r\n                              <span class="highlight"></span>\r\n                              <span class="bar"></span>\r\n                              <label>Description</label>\r\n                            </div>\r\n                            <div class="group">\r\n                                <span style="color: #5264AE">Start Date</span>\r\n                                <input ng-model="task.startDate" type="date" required>\r\n                                <span class="highlight"></span>\r\n                                <span class="bar"></span>\r\n                            </div>\r\n                            <div class="group">\r\n                                <span style="color: #5264AE">Deadline</span>\r\n                                <input ng-model="task.deadline" type="date" required>\r\n                                <span class="highlight"></span>\r\n                                <span class="bar"></span>\r\n                            </div>\r\n                            <div class="group">      \r\n                                <input ng-model="task.priority" type="text" required>\r\n                                <span class="highlight"></span>\r\n                                <span class="bar"></span>\r\n                                <label>Priority</label>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                        <div style=\'float:right\'>\r\n                                <p id="cancelButton" >Cancel</p> \r\n                                <p id="addButton" ng-click="addProject(task)">Create</p>        \r\n                        </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>'},function(s,t,e){s.exports=function(s){s.when("/project",{template:e(7),controller:"project",resolve:{check:()=>console.log("ha")}}).when("/task",{template:e(6),controller:"task",resolve:{check:()=>console.log("ha")}}).when("/chart",{template:e(5),controller:"chart",resolve:{check:()=>console.log("ha")}}).when("/calendar",{template:e(4),controller:"calendar",resolve:{check:()=>console.log("ha")}}).when("/project/:id",{template:e(3),controller:"projectTasks",resolve:{check:()=>console.log("ha")}})}},function(s,t){s.exports=function(s,t,e){e.getTasksOfProject(t.id,n=>{s.tasks=n,s.chosenTask=n[0],e.getProjectById(t.id,t=>{s.project=t})}),s.changeContent=function(t){s.chosenTask=t,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.getChosen=function(t){let e="task";return t.finished&&(e+=" finished"),s.chosenTask.name==t.name&&(e+=" selected"),e}}},function(s,t){s.exports=function(s,t,e){console.log("charts");var n,a=document.getElementById("chartTasks");Chart.defaults.global.legend.display=!1,s.tasks={name:"Tasks",tasks:[{name:"Talk to the boss",description:"Talk to the boss about TIS",priority:"High"}]},t.getProjects(e=>{s.projects=e,s.chosenProject=e[0],function(){let e=[],n=0;for(let a=0;a<s.projects.length;a++)t.getReports(s.projects[a]._id,t=>{t&&e.push(t),++n===s.projects.length&&(s.projects=e,s.chosenProject=e[0],s.createChart(e[0]))})}()}),s.getTasks=function(e){t.getTasksOfProject(s.projects[e]._id,t=>{s.projects[e].tasks=t,s.projects[e]&&!s.projects[e].prazo&&(s.projects[e].prazo=t.length),s.projects[e]&&!s.projects[e].foraPrazo&&(s.projects[e].foraPrazo=t.length+2)})},s.chosenTask=s.tasks.tasks[0],s.createChart=function(s){console.log(s),console.log(n),n&&n.destroy(),n=new Chart(a,{type:"bar",data:{labels:["No prazo","Atrasadas"],datasets:[{label:"Time Tracking (Tarefas)",data:[s.prazo,s.foraPrazo],backgroundColor:["#f8bbd0","#e91e63"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)"],borderWidth:0}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]},legend:{display:!1},title:{display:!0,text:"Time Tracking - Conclusão das tarefas"}}})},s.getChosen=function(t){let e;return e=s.chosenProject.name===t.name?"task selected":"task"},s.changeContent=(t=>{s.chosenProject=t,s.createChart(t)})}},function(s,t){s.exports=function(s,t){function e(){console.log("getting tasks"),t.getTasks(e=>{console.log(e),s.tasks=e,s.tasks.forEach(s=>{t.getDays(s._id,t=>{s.days=t.diffDays})}),s.chosenTask=s.tasks[0]})}e(),t.getProjects(t=>{s.projects=t}),s.changeContent=function(t){s.chosenTask=t},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.showAddTask=!1,s.getChosen=function(t){let e="task";return t.finished&&(e+=" finished"),s.chosenTask.name==t.name&&(e+=" selected"),e},s.deleteTask=function(s){t.deleteTask(s,s=>{e()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0},s.showUpdateTask=function(t){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(e){t.setTask(e,s=>{console.alert("Tarefa "+s.name+" criada com sucesso!")}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,e){t.updateTask(s,e,s=>{console.log(s)})},s.startTask=function(s){t.startTask(s,s=>{console.log(s)})},s.pauseTask=function(s){t.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){t.finishTask(s,s=>{console.log(s)})}}},function(s,t){s.exports=function(s,t){console.log("calendar"),t.getTasks(t=>{s.tasks=t,console.log(t),s.chosenTask=s.tasks[0]}),s.pad=function(s,t){for(var e=""+s;e.length<t;)e="0"+e;return e};let e=new Date,n=e.getDate(),a=s.pad(e.getMonth()+1,2),r=e.getFullYear();s.diaAtual=n+"/"+a.padStart(2,"0")+"/"+r,s.changeContent=function(t){s.chosenTask=t},s.getChosen=function(t){return s.chosenTask.name===t.name?"task selected":"task"}}},function(s,t){s.exports=function(s,t,e){function n(){e.getProjects(t=>{s.projects=t,s.chosenProject=t[0];for(let t=0;t<s.projects.length;t++)s.getTasks(t)})}n(),s.teste="This is just a test",s.addProject=function(s){e.setProject(s)},s.getTasks=function(t){e.getTasksOfProject(s.projects[t]._id,e=>{s.projects[t].tasks=e})},s.changeContent=(t=>{s.chosenProject=t,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`}),s.getChosen=function(t){return s.chosenProject.name==t.name?"task selected":"task"},s.deleteProject=function(s){t({headers:{auth_key:"9d277d84-665a-4c79-9823-6b1d7d41016e"},method:"DELETE",url:"/project/"+s._id}).then(s=>{n()})}}},function(s,t){const e="9058c038-5e57-43ab-ad56-24dd603e89b0";s.exports=function(s){this.getProjects=function(t){s({headers:{auth_key:e},method:"GET",url:"/project"}).then(s=>t(s.data))},this.getTasksOfProject=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/task/project/"+t}).then(s=>n(s.data))},this.getProjectById=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/project/"+t}).then(s=>n(s.data))},this.getReports=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/task/"+t+"/reports"}).then(s=>n(s.data))},this.getTasks=function(t){s({headers:{auth_key:e},method:"GET",url:"/task/"}).then(s=>{t(s.data)})},this.setTask=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"POST",url:"/task/"}).then(s=>{t(s.data)})},this.updateTask=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"PUT",url:"/task/"+n}).then(s=>{t(s.data)})},this.startTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/start/"+t}).then(s=>{task(s.data)})},this.pauseTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/pause/"+t}).then(s=>{task(s.data)})},this.finishTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/finish/"+t}).then(s=>{task(s.data)})},this.deleteTask=function(t,n){s({headers:{auth_key:e},method:"DELETE",url:"/task/"+t}).then(s=>n(s.data))},this.setProject=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"POST",url:"/project"}).then(s=>{n(s.data)})},this.getDays=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:{task:t},method:"POST",url:"/allTime"}).then(s=>{n(s.data)})}}},,,,,,,,function(s,t,e){"use strict";e.r(t);var n=e(0),a=e.n(n),r=e(2),i=e.n(r),c=e(1),o=e.n(c);const l=a.a.module("willdo",[i.a,o.a]);l.service("$httpController",["$http",e(14)]),l.controller("project",["$scope","$http","$httpController",e(13)]),l.controller("calendar",["$scope","$httpController",e(12)]),l.controller("task",["$scope","$httpController",e(11)]),l.controller("chart",["$scope","$httpController","$http",e(10)]),l.controller("projectTasks",["$scope","$routeParams","$httpController",e(9)]),l.config(["$routeProvider",e(8)])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,