!function(s){function t(t){for(var n,c,o=t[0],r=t[1],l=t[2],p=0,h=[];p<o.length;p++)c=o[p],a[c]&&h.push(a[c][0]),a[c]=0;for(n in r)Object.prototype.hasOwnProperty.call(r,n)&&(s[n]=r[n]);for(d&&d(t);h.length;)h.shift()();return i.push.apply(i,l||[]),e()}function e(){for(var s,t=0;t<i.length;t++){for(var e=i[t],n=!0,o=1;o<e.length;o++){var r=e[o];0!==a[r]&&(n=!1)}n&&(i.splice(t--,1),s=c(c.s=e[0]))}return s}var n={},a={1:0};var i=[];function c(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return s[t].call(e.exports,e,e.exports,c),e.l=!0,e.exports}c.m=s,c.c=n,c.d=function(s,t,e){c.o(s,t)||Object.defineProperty(s,t,{configurable:!1,enumerable:!0,get:e})},c.r=function(s){Object.defineProperty(s,"__esModule",{value:!0})},c.n=function(s){var t=s&&s.__esModule?function(){return s.default}:function(){return s};return c.d(t,"a",t),t},c.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},c.p="";var o=window.webpackJsonp=window.webpackJsonp||[],r=o.push.bind(o);o.push=t,o=o.slice();for(var l=0;l<o.length;l++)t(o[l]);var d=r;i.push([18,0]),e()}([,,,function(s,t){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n  <div class="top-content">\n      <p class="title">{{project.name}}</p>\n  </div>\n  <div class="bottom-content">\n      <div class="tasks-panel">\n          <p class="sub-title">Tasks</p>\n          <div class="tasks">\n              <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\n          </div>\n      </div>\n      <div class="selected-task">\n          <div class="top-selected-task">\n              <p class="sub-title-task">{{chosenTask.name}}</p>\n              <p ng-class="getPriority()">Priority: {{chosenTask.priority}}</p>\n          </div>\n          <div class="task-attribute">\n              <p class="description">{{chosenTask.description}}</p>\n              <div class="task-button">\n                  <div class="task-buttom-left">\n                      <a class=\'button\' href="#!timetracker"> Time Tracker</a>\n                      <a class=\'button\' href="#!chart"> Chart</a>\n                  </div>\n                  <div class="task-buttom-right">\n                      <a class=\'button\' href="#!time">Deadline: {{ chosenTask.deadline }}</a>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n\n</div>'},function(s,t){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <h1 class="title">Calendar</h1>\n    <center>\n        <div class="calendar-div">\n            <p class="search-date">Date: </p>\n            <p class="search-date">{{diaAtual}}</p>\n            \x3c!-- <input type="text" id="calendario" ng-value="diaAtual" placeholder="26/04/2018"/>--\x3e\n            \x3c!--<a class=\'button chart-button\' href="#!timetracker">Search</a>--\x3e\n        </div>\n\n        <div class="bottom-content">\n            <div class="tasks-panel">\n                <p class="sub-title">Tasks</p>\n                <div class="tasks">\n                    <p ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}</p>\n                </div>\n            </div>\n            <div class="selected-task">\n                <div class="top-selected-task">\n                    <p class="sub-title-task">{{chosenTask.name}}</p>\n                </div>\n                <div class="task-attribute">\n                    <p class="description">{{chosenTask.description}}</p>\n                    <div class="task-button">\n                        <div class="task-buttom-left">\n                            <a class=\'button\' href="#!chart"> Chart</a>\n                        </div>\n                        <div class="task-buttom-right">\n                            <a class=\'button\' href="#!time">Ends in 4d 3h</a>\n                        </div>\n\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    </center>\n\n</div>'},function(s,t){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <h1 class="title"> Chart</h1>\n    <center>\n        <div class="bottom-content">\n            <div class="tasks-panel">\n                <p class="sub-title">{{content.sideBar.type}}</p>\n                <div class="tasks">\n                    <p class="sub-title">Projects</p>\n                    <div ng-repeat="x in projects" ng-class="getChosen(x)">\n                        <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class="selected-task">\n                <div class="top-selected-task">\n                    <p class="sub-title-task">{{chosenProject.name}}</p>\n                </div>\n                <div class="task-attribute">\n                    <div class="task-button">\n                        <div class="chart-container" style="position: relative; height:30vh; width:60vw">\n                            <canvas id="chartTasks"></canvas>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </center>\n</div>'},function(s,t){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <div class="top-content">\n        <p class="title">Tasks</p>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n            -\n            <p ng-click="showCreateTask()" class=\'green\'>+ Create new Task</p>\n            <div class="tasks">\n                <div ng-click=\'changeContent(x)\' ng-repeat="x in tasks" ng-class="getChosen(x)">#{{$index+1}} - {{x.name}}\n                    <p class="float-right" ng-click="deleteTask(x._id)">X</p>\n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddTask">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenTask.name}} -\n                    <a ng-href="#!/project/{{chosenTask.project._id}}">{{chosenTask.project.name}} </a>\n                </p>\n\n                <p ng-class="getPriority()">{{chosenTask.priority}} Priority</p>\n            </div>\n            <div class="task-attribute">\n                <p class="description">{{chosenTask.description}}</p>\n                <div class="task-button">\n                    <div class="task-buttom-left">\n                        <a class=\'button\'> You have worked {{chosenTask.days}} days on this task </a>\n                        <a ng-click="startTask(chosenTask._id)" class=\'button\'> Start task</a>\n                        <a ng-click="pauseTask(chosenTask._id)" class=\'button\'> Pause task</a>\n                    </div>\n                    <div class="task-buttom-right">\n                        <a class=\'button\' href="#!chart"> Chart</a>\n                        <a ng-click="finishTask(chosenTask._id)" class=\'button\'> Finish task</a>\n                        <a ng-click="showUpdateTask()" class=\'button\'> Update task</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\'selected-task\' ng-show="showAddTask">\n            <div class=\'addTask\'>\n                <p class="sub-title-task">{{subTitleTask}}</p>\n                <form>\n                    <div class="group">\n                        <input ng-model="task.name" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Name</label>\n                    </div>\n\n                    <div class="group">\n                        <input ng-model="task.description" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Description</label>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Start Date</span>\n                        <input ng-model="task.startDate" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <span style="color: #5264AE">Deadline</span>\n                        <input ng-model="task.deadline" type="date" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                    </div>\n                    <div class="group">\n                        <input ng-model="task.priority" type="text" required>\n                        <span class="highlight"></span>\n                        <span class="bar"></span>\n                        <label>Priority</label>\n                    </div>\n\n                    <div ng-show="selectProject" class="group">\n                        <select ng-model="task.project">\n                            <option value=\'\' disabled selected>Select one project</option>\n                            <option ng-repeat="project in projects" value="{{project._id}}">{{project.name}}</option>\n                        </select>\n                    </div>\n\n                </form>\n                <div style=\'float:right\'>\n                    <p id="cancelButton" ng-click="cancelTask()">Cancel</p>\n                    <p id="addButton" ng-show="createButton" ng-click="addTask(task)">Create</p>\n                    <p id="addButton" ng-show="updateButton" ng-click="updateTask(task,chosenTask._id)">Update</p>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n</div>'},function(s,t){s.exports='<div class="sidebar">\n    <div class="sidebar-top">\n        <div class="sidebar-item logo">\n        </div>\n        <div class="sidebar-item user">\n            <img class=\'user-img\' src="https://avatars3.githubusercontent.com/u/15956455?s=100&v=4" alt="User photo">\n            <p class="username">Matheus de Assis</p>\n        </div>\n    </div>\n    <div class="sidebar-bottom">\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu menu-first">\n            <a href="#!project" class="menu-item">PROJECTS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!task" class="menu-item">TASKS</a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!chart" class="menu-item">CHARTS </a>\n        </div>\n        <div onclick=\'changeActive(this)\' class="sidebar-item menu">\n            <a href="#!calendar" class="menu-item">CALENDAR</a>\n        </div>\n\n    </div>\n</div>\n<div class="content">\n    <div class="top-content">\n        <p class="title">Project</p>\n    </div>\n    <div class="bottom-content">\n        <div class="tasks-panel">\n            <p class="sub-title">{{content.sideBar.type}}</p>\n            <div class="tasks">\n                <p ng-click="showAddProject = !showAddProject" class=\'green\'>+ Create new Project</p>\n                <div ng-repeat="x in projects" ng-class="getChosen(x)">\n                    <p ng-click=\'changeContent(x)\' style=\'display:inline\'>#{{$index+1}} - {{x.name}}</p>\n                    <p class="float-right" ng-click="deleteProject(x)">X</p>\n                </div>\n            </div>\n        </div>\n        <div class="selected-task" ng-show="!showAddProject">\n            <div class="top-selected-task">\n                <p class="sub-title-task">{{chosenProject.name}}</p>\n                <p ng-class="getPriority">Priority: {{chosenProject.priority}}</p>\n            </div>\n            <div class="task-attribute">\n                <p class="description">{{chosenProject.description}}</p>\n                <div class="task-button">\n                    <div class="task-buttom-left">\n                        <a class=\'button\' href="#!chart"> Time Tracker</a>\n                    </div>\n                    <div class="task-buttom-right">\n                        <a class=\'button\' ng-href="#!/project/{{chosenProject._id}}">Tasks Details</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\'selected-task\' ng-show="showAddProject">\n            <div class=\'addTask\'>\n                <p class="sub-title-task">Create Project</p>\n                    <form>\n                            <div class="group">      \n                              <input ng-model="task.name" type="text" required>\n                              <span class="highlight"></span>\n                              <span class="bar"></span>\n                              <label>Name</label>\n                            </div>\n                              \n                            <div class="group">      \n                              <input ng-model="task.description" type="text" required>\n                              <span class="highlight"></span>\n                              <span class="bar"></span>\n                              <label>Description</label>\n                            </div>\n                            <div class="group">\n                                <span style="color: #5264AE">Start Date</span>\n                                <input ng-model="task.startDate" type="date" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                            </div>\n                            <div class="group">\n                                <span style="color: #5264AE">Deadline</span>\n                                <input ng-model="task.deadline" type="date" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                            </div>\n                            <div class="group">      \n                                <input ng-model="task.priority" type="text" required>\n                                <span class="highlight"></span>\n                                <span class="bar"></span>\n                                <label>Priority</label>\n                            </div>\n                            \n                        </form>\n                        <div style=\'float:right\'>\n                                <p id="cancelButton" >Cancel</p> \n                                <p id="addButton" ng-click="addProject(task)">Create</p>        \n                        </div>\n            </div>\n        </div>\n    </div>\n\n</div>'},function(s,t,e){s.exports=function(s){s.when("/project",{template:e(7),controller:"project",resolve:{check:()=>console.log("ha")}}).when("/task",{template:e(6),controller:"task",resolve:{check:()=>console.log("ha")}}).when("/chart",{template:e(5),controller:"chart",resolve:{check:()=>console.log("ha")}}).when("/calendar",{template:e(4),controller:"calendar",resolve:{check:()=>console.log("ha")}}).when("/project/:id",{template:e(3),controller:"projectTasks",resolve:{check:()=>console.log("ha")}})}},function(s,t){s.exports=function(s,t,e){function n(){e.getProjects(t=>{s.projects=t,s.chosenProject=t[0];for(let t=0;t<s.projects.length;t++)s.getTasks(t)})}n(),s.teste="This is just a test",s.addProject=function(s){e.setProject(s)},s.getTasks=function(t){e.getTasksOfProject(s.projects[t]._id,e=>{s.projects[t].tasks=e})},s.changeContent=(t=>{s.chosenProject=t,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`}),s.getChosen=function(t){return s.chosenProject.name==t.name?"task selected":"task"},s.deleteProject=function(s){t({headers:{auth_key:"9d277d84-665a-4c79-9823-6b1d7d41016e"},method:"DELETE",url:"/project/"+s._id}).then(s=>{n()})}}},function(s,t){const e="9058c038-5e57-43ab-ad56-24dd603e89b0";s.exports=function(s){this.getProjects=function(t){s({headers:{auth_key:e},method:"GET",url:"/project"}).then(s=>t(s.data))},this.getTasksOfProject=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/task/project/"+t}).then(s=>n(s.data))},this.getProjectById=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/project/"+t}).then(s=>n(s.data))},this.getReports=function(t,n){s({headers:{auth_key:e},method:"GET",url:"/task/"+t+"/reports"}).then(s=>n(s.data))},this.getTasks=function(t){s({headers:{auth_key:e},method:"GET",url:"/task/"}).then(s=>{t(s.data)})},this.setTask=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"POST",url:"/task/"}).then(s=>{t(s.data)})},this.updateTask=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"PUT",url:"/task/"+n}).then(s=>{t(s.data)})},this.startTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/start/"+t}).then(s=>{task(s.data)})},this.pauseTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/pause/"+t}).then(s=>{task(s.data)})},this.finishTask=function(t){s({headers:{auth_key:e,"Content-Type":"application/json"},method:"POST",url:"/task/finish/"+t}).then(s=>{task(s.data)})},this.deleteTask=function(t,n){s({headers:{auth_key:e},method:"DELETE",url:"/task/"+t}).then(s=>n(s.data))},this.setProject=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:t,method:"POST",url:"/project"}).then(s=>{n(s.data)})},this.getDays=function(t,n){s({headers:{auth_key:e,"Content-Type":"application/json"},data:{task:t},method:"POST",url:"/allTime"}).then(s=>{n(s.data)})}}},,,,,,,,function(s,t,e){"use strict";e.r(t);var n=e(0),a=e.n(n),i=e(2),c=e.n(i),o=e(1),r=e.n(o);const l=a.a.module("willdo",[c.a,r.a]);l.service("$httpController",["$http",e(10)]),l.controller("project",["$scope","$http","$httpController",e(9)]),l.controller("calendar",["$scope","$httpController",e(22)]),l.controller("task",["$scope","$httpController",e(21)]),l.controller("chart",["$scope","$httpController","$http",e(20)]),l.controller("projectTasks",["$scope","$routeParams","$httpController",e(19)]),l.config(["$routeProvider",e(8)])},function(s,t){s.exports=function(s,t,e){e.getTasksOfProject(t.id,n=>{s.tasks=n,s.chosenTask=n[0],e.getProjectById(t.id,t=>{s.project=t})}),s.changeContent=function(t){s.chosenTask=t,s.getPriority=`priority ${s.chosenProject.priority.toLowerCase()}`},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.getChosen=function(t){let e="task";return t.finished&&(e+=" finished"),s.chosenTask.name==t.name&&(e+=" selected"),e}}},function(s,t){s.exports=function(s,t,e){console.log("charts");var n=document.getElementById("chartTasks");Chart.defaults.global.legend.display=!1,s.tasks={name:"Tasks",tasks:[{name:"Talk to the boss",description:"Talk to the boss about TIS",priority:"High"}]},t.getProjects(e=>{s.projects=e,s.chosenProject=e[0],function(){let e=[],n=0;for(let a=0;a<s.projects.length;a++)t.getReports(s.projects[a]._id,t=>{t&&e.push(t),++n===s.projects.length&&(s.projects=e,s.chosenProject=e[0],s.createChart(e[0]))})}()}),s.getTasks=function(e){t.getTasksOfProject(s.projects[e]._id,t=>{s.projects[e].tasks=t,s.projects[e]&&!s.projects[e].prazo&&(s.projects[e].prazo=t.length),s.projects[e]&&!s.projects[e].foraPrazo&&(s.projects[e].foraPrazo=t.length+2)})},s.chosenTask=s.tasks.tasks[0],s.createChart=function(s){console.log(s);new Chart(n,{type:"bar",data:{labels:["No prazo","Atrasadas"],datasets:[{label:"Time Tracking (Tarefas)",data:[s.prazo,s.foraPrazo],backgroundColor:["#f8bbd0","#e91e63"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)"],borderWidth:0}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]},legend:{display:!1},title:{display:!0,text:"Time Tracking - Conclusão das tarefas"}}})},s.getChosen=function(t){let e;return e=s.chosenProject.name===t.name?"task selected":"task"},s.changeContent=(t=>{s.chosenProject=t,s.createChart(t)})}},function(s,t){s.exports=function(s,t){function e(){console.log("getting tasks"),t.getTasks(e=>{console.log(e),s.tasks=e,s.tasks.forEach(s=>{t.getDays(s._id,t=>{s.days=t.diffDays})}),s.chosenTask=s.tasks[0]})}e(),t.getProjects(t=>{s.projects=t}),s.changeContent=function(t){s.chosenTask=t},s.getPriority=function(){return"priority "+s.chosenTask.priority.toLowerCase()},s.showAddTask=!1,s.getChosen=function(t){let e="task";return t.finished&&(e+=" finished"),s.chosenTask.name==t.name&&(e+=" selected"),e},s.deleteTask=function(s){t.deleteTask(s,s=>{e()})},s.showCreateTask=function(){s.showAddTask=!0,s.updateButton=!1,s.createButton=!0,s.subTitleTask="Create Task",s.selectProject=!0},s.showUpdateTask=function(t){s.showAddTask=!0,s.updateButton=!0,s.createButton=!1,s.subTitleTask="Update Task",s.selectProject=!1},s.cancelTask=function(){s.showAddTask=!s.showAddTask},s.addTask=function(e){t.setTask(e,s=>{console.alert("Tarefa "+s.name+" criada com sucesso!")}),s.showAddTask=!s.showAddTask},s.updateTask=function(s,e){t.updateTask(s,e,s=>{console.log(s)})},s.startTask=function(s){t.startTask(s,s=>{console.log(s)})},s.pauseTask=function(s){t.pauseTask(s,s=>{console.log(s)})},s.finishTask=function(s){t.finishTask(s,s=>{console.log(s)})}}},function(s,t){s.exports=function(s,t){console.log("calendar"),t.getTasks(t=>{s.tasks=t,console.log(t),s.chosenTask=s.tasks[0]}),s.pad=function(s,t){for(var e=""+s;e.length<t;)e="0"+e;return e};let e=new Date,n=e.getDate(),a=s.pad(e.getMonth()+1,2),i=e.getFullYear();s.diaAtual=n+"/"+a.padStart(2,"0")+"/"+i,s.changeContent=function(t){s.chosenTask=t},s.getChosen=function(t){return s.chosenTask.name===t.name?"task selected":"task"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,